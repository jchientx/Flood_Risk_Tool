<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- saved from url=(005)local -->
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<style type="text/css" id="internalStyle" xmlns="">
		body {
		  font-family: Verdana, Gill, Helvetica, Sans-serif ;
		  font-size: 0.8em;
		  font-weight: 500;
		  color: #000020;
		  background-color: #FFFFFF;
		}
		div.itemDescription {
		  margin-right: 2em;
		  margin-bottom: 2em;
		}
		h1 {
		  font-size: 1.5em;
		  margin-top: 0;
		  margin-bottom: 5px;
		}
		h1.idHeading {
		  color: #008FAF;
		  text-align: center;
		}
		h1.gpHeading {
		  color: black;
		}
		span.idHeading {
		  color: #007799;
		  font-weight: bold;
		}
		.center {
		  text-align: center;
		  margin-top: 5px;
		  margin-bottom: 5px;
		}
		img {
		  width: 210px;
		  border-width: 1px;
		  border-style: outset;
		}
		img.center {
		  text-align: center;
		  display: block;
		  border-color: #666666;
		}
		img.enclosed {
		  width: 60%;
		}
		img.gp {
		  width: auto;
		  border-style: none;
		  margin-top: -1.2em;
		}
		.noThumbnail {
		  color: #888888;
		  font-size: 1.2em;
		  border-width: 1px;
		  border-style: solid;
		  border-color: black;
		  padding: 3em 3em;
		  position: relative;
		  text-align: center;
		  width: 210px;
		  height: 140px;
		}
		.noContent {
		  color: #888888;
		}
		.itemInfo p {
		  margin-top: -0.1em;
		}
		.itemInfo img {
		  width: auto;
		  border: none;
		}
		.gpItemInfo p {
		  margin-top: -1.2em;
		}
		div.box {
		  margin-left: 1em;
		}
		div.hide {
		  display: none;
		}
		div.show {
		  display: block;
		}
		span.hide {
		  display: none;
		}
		span.show {
		  display: inline-block;
		}
		.backToTop a {
		  color: #DDDDDD;
		  font-style: italic;
		  font-size: 0.85em;
		}
		h2 {
		  font-size: 1.2em;
		}
		h2.gp {
		  color: #00709C;
		}
		.gpsubtitle {
		  color: black;
		  font-size: 1.2em;
		  font-weight: normal;
		}
		.gptags {
		  color: black;
		  font-size: 0.8em;
		  font-weight: normal;
		}
		.head {
		  font-size: 1.3em;
		}
		a:link {
		  color: #098EA6;
		  font-weight: normal;
		  text-decoration: none;
		}
		a:visited {
		  color: #098EA6;
		  text-decoration: none;
		}
		a:link:hover, a:visited:hover {
		  color: #007799;
		  background-color: #C6E6EF;
		}
		h2.iso a {
		  color: #007799;
		  font-weight: bold;
		}
		.iso a:link {
		  color: #007799;
		  text-decoration: none;
		}
		.iso a:visited {
		  color: #007799;
		  text-decoration: none;
		}
		.iso a:link:hover, .iso a:visited:hover {
		  color: #006688;
		  background-color: #C6E6EF;
		}
		h2.fgdc a {
		  color: #888888;
		  font-weight: bold;
		}
		.fgdc a:link {
		  color: #888888;
		  text-decoration: none;
		}
		.fgdc a:visited {
		  color: #888888;
		  text-decoration: none;
		}
		.fgdc a:link:hover, .fgdc a:visited:hover {
		  color: #777777;
		  background-color: #C6E6EF;
		}
		h3 {
			font-size: 1em; 
			color: #00709C;
		}
		.backToTop {
		  color: #AAAAAA;
		  margin-left: 1em;
		}
		p.gp {
		  margin-top: .6em;
		  margin-bottom: .6em;
		}
		ul ul {
		  list-style-type: square;
		}
		ul li.iso19139heading {
		  margin-left: -3em;
		  list-style: none;
		  font-weight: bold;
		  color: #666666;
		}
		dl {
		  margin: 0;
		  padding: 0;
		}
		dl.iso {
		  background-color: #F2F9FF;
		}
		dl.esri {
		  background-color: #F2FFF9;
		}
		dl.subtype {
		  width: 40em;
		  margin-top: 0.5em;
		  margin-bottom: 0.5em;
		  padding: 0;
		}
		dt {
		  margin-left: 0.6em;
		  padding-left: 0.6em;
		  clear: left;
		}
		.subtype dt {
		  width: 60%;
		  float: left;
		  margin: 0;
		  padding: 0.5em 0.5em 0 0.75em;
		  border-top: 1px solid #006400;
		  clear: none;
		}
		.subtype dt.header {
		  padding: 0.5em 0.5em 0.5em 0;
		  border-top: none;
		}
		dd {
		  margin-left: 0.6em;
		  padding-left: 0.6em;
		  clear: left;
		}
		.subtype dd {
		  float: left;
		  width: 25%;
		  margin: 0;
		  padding: 0.5em 0.5em 0 0.75em;
		  border-top: 1px solid #006400;
		  clear: none;
		}
		.subtype dd.header {
		  padding: 0.5em 0.5em 0.5em 0;
		  border-top: none;
		}
		.isoElement {
		  font-variant: small-caps;
		  font-size: 0.9em;
		  font-weight: normal;
		  color: #006688;
		}
		.esriElement {
		  font-variant: small-caps;
		  font-size: 0.9em;
		  font-weight: normal;
		  color: #006688;
		}
		.element {
		  font-variant: small-caps;
		  font-size: 0.9em;
		  font-weight: normal;
		  color: #666666;
		}
		unknownElement {
		  font-variant: small-caps;
		  font-size: 0.9em;
		  font-weight: normal;
		  color: #333333;
		}
		.sync {
		  color: #006400;
		  font-weight: bold;
		  font-size: 0.9em;
		}
		.syncOld {
		  color: #888888;
		  font-weight: bold;
		  font-size: 0.9em;
		}
		.textOld {
		  color: #999999;
		}
		.code {
		  font-family: monospace;
		}
		pre.wrap {
		  width: 96%;
		  font-family: Verdana, Gill, Helvetica, Sans-serif ;
		  font-size: 1em;
		  margin: 0 0 1em 0.6em;
		  white-space: pre-wrap;       /* css-3 */
		  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
		  white-space: -pre-wrap;      /* Opera 4-6 */
		  white-space: -o-pre-wrap;    /* Opera 7 */
		  word-wrap: break-word;       /* Internet Explorer 5.5+ */
		}
		pre.gp {
		  font-family: Courier New, Courier, monospace;
		  line-height: 1.2em;
		}
		.gpcode {
		  margin-left:15px;
		  border: 1px dashed #ACC6D8;
		  padding: 10px;
		  background-color:#EEEEEE;
		  height: auto;
		  overflow: scroll; 
		  width: 96%;
		}
		tr {
		  vertical-align: top;
		}
		th {
		  text-align: left;
		  background: #dddddd;
		  vertical-align: bottom;
		  font-size: 0.8em;
		}
		td {
		  background: #EEEEEE;
		  color: black;
		  vertical-align: top;
		  font-size: 0.8em;
		}
		td.description {
		  background: white;
		}
	  </style>
</head>
<body oncontextmenu="return true">
<h1 class="gpHeading" xmlns="">Flood Risk Data Processing Tool</h1>
<h2 class="gp" xmlns="">Titleâ€ƒ
		<span class="gpsubtitle">Flood Risk Data Processing Tool</span>
</h2>
<h2 class="gp" xmlns="">Summary</h2>
<div class="gpItemInfo" xmlns="">
<p><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This tool generates a basic flood risk map using three parameters like distance to rivers and two additional parameters for example rainfall and elevation data. It uses analysis tools like intersect, buffer and union. </SPAN></P></DIV></DIV></DIV></p><br />
</div>
<h2 class="gp" xmlns="">Illustration</h2>
<div xmlns="">
<img class="gp" name="thumbnail" id="thumbnail" alt="Thumbnail" title="Thumbnail" src="file:///C:\Users\joyce\AppData\Local\Temp\arcCEB0\1.jpg" />
</div>
<h2 class="gp" xmlns="">Usage</h2>
<div class="gpItemInfo" xmlns="">
<p><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This tool can be used for processing like intersection, buffer and union of the required three inputs from the user, like one for the rivers, and two others like rainfall and elevation data. These data can be collected at any spatial unit because they will be intersected with the study area boundary. One of the parameters requires buffering to measure the proximity to the risk zones and it should be in a linear format. The last part of the tool combines all of the outputs in a feature class format.</SPAN></P></DIV></DIV></DIV></p><br />
</div>
<h2 class="gp" xmlns="">Syntax</h2>
<div xmlns="">
<p style="margin-top: -1.2em">FloodRisk1 (Study_Area, Rivers__Required_for_Buffer_, Intersect_Study_Area_and_Rivers, Parameter_1, Intersect_Study_Area_and_Parameter_1, Parameter_2, Intersect_Study_Area_and_Parameter_2, Distance_from_Rivers, Buffered_Rivers, Union_of_All_Parameters) <br /><br />
</p>
<table width="100%" border="0" cellpadding="5">
<tbody>
<tr>
<th width="30%">
<b>Parameter</b>
</th>
<th width="50%">
<b>Explanation</b>
</th>
<th width="20%">
<b>Data Type</b>
</th>
</tr>
<tr>
<td class="info">Study_Area</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter requires a feature </SPAN><SPAN>class</SPAN><SPAN> of</SPAN><SPAN> the boundary/ limit for a specific/ study area. It can be of only a specific spatial unit</SPAN><SPAN>  (e</SPAN><SPAN>.g. state, county, city).</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Study Area = arcpy.GetParameterAsText(0)</SPAN></P><P><SPAN>This code imports the boundary of the specific study area/ region. This is an input feature type</SPAN><SPAN>.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Rivers__Required_for_Buffer_</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter requires a feature </SPAN><SPAN>class</SPAN><SPAN> </SPAN><SPAN>of </SPAN><SPAN>rivers data </SPAN><SPAN>for a specific area. It can be of any spatial unit (e.g. state, city, county etc.) desired.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Rivers = arcpy.GetParameterAsText(</SPAN><SPAN>1</SPAN><SPAN>)</SPAN></P><P><SPAN>This code imports one of the other parameters selected to get data for the specific study area. This is an input feature type.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Intersect_Study_Area_and_Rivers</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter creates the output of the interesected parts from the study area and rivers data.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Intersect Study Area and Rivers = arcpy.GetParameterAsText(2)</SPAN></P><P><SPAN>This code intersects the study area and rivers within that. It is an output feature type.</SPAN></P><P><SPAN>ValueTable1 = ["Feature</SPAN><SPAN>Class</SPAN><SPAN>", "Featur</SPAN><SPAN>eClass</SPAN><SPAN>"] </SPAN></P><P><SPAN>This code includes the study area and first parameter data to be intersected. They are both feature </SPAN><SPAN>class </SPAN><SPAN>type.</SPAN></P><P><SPAN>arcpy.Intersect_analysis(ValueTable1, "FeatureClass")</SPAN></P><P><SPAN>This code creates an output of the intersection function.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Parameter_1</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter requires a feature </SPAN><SPAN>class</SPAN><SPAN> o</SPAN><SPAN>f a specific data like precipitation/ rainfall</SPAN><SPAN /><SPAN>for a specific area . It can be of any spatial unit (e.g. state, city, county etc.) desired.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Parameter 1</SPAN><SPAN>= arcpy.GetParameterAsText(</SPAN><SPAN>3</SPAN><SPAN>)</SPAN></P><P><SPAN>This code imports one of the other parameters selected to get data for the specific study area. This is an input feature type.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Intersect_Study_Area_and_Parameter_1</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter creates the output of the interesected parts from the study area and the first parameter data.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Intersect Study Area and Parameter 1 = arcpy.GetParameterAsText(</SPAN><SPAN>4</SPAN><SPAN>)</SPAN></P><P><SPAN>This code intersects the study area and first parameter data within that. It is an output feature type.</SPAN></P><P><SPAN>ValueTable1 = ["Feature</SPAN><SPAN>Class</SPAN><SPAN>", "Feature</SPAN><SPAN>Class</SPAN><SPAN>"] </SPAN></P><P><SPAN>This code includes the study area and first parameter data to be intersected. They are both feature </SPAN><SPAN>Class</SPAN><SPAN>type.</SPAN></P><P><SPAN>arcpy.Intersect_analysis(ValueTable1, "FeatureClass")</SPAN></P><P><SPAN>This code creates an output of the intersection function.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Parameter_2</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter requires a feature </SPAN><SPAN>class</SPAN><SPAN> </SPAN><SPAN>of a specific data for a specific area like precipitation/ rainfall. It can be of any spatial unit (e.g. state, city, county etc.) desired.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Parameter 2</SPAN><SPAN>= arcpy.GetParameterAsText(</SPAN><SPAN>5</SPAN><SPAN>)</SPAN></P><P><SPAN>This code imports one of the other parameters selected to get data for the specific study area. This is an input feature type.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Intersect_Study_Area_and_Parameter_2</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter creates the output of the interesected parts from the study area and the second parameter data.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>Intersect Study Area and Parameter </SPAN><SPAN>2</SPAN><SPAN>= arcpy.GetParameterAsText(</SPAN><SPAN>6</SPAN><SPAN>)</SPAN></P><P><SPAN>This code intersects the study area and second parameter data within that. It is an output feature type.</SPAN></P><P><SPAN>ValueTable1 = ["Feature</SPAN><SPAN>Class</SPAN><SPAN>", "Feature</SPAN><SPAN>Class</SPAN><SPAN>"] </SPAN></P><P><SPAN>This code includes the study area and second parameter data to be intersected. They are both feature </SPAN><SPAN>class </SPAN><SPAN>type.</SPAN></P><P><SPAN>arcpy.Intersect_analysis(ValueTable1, "FeatureClass")</SPAN></P><P><SPAN>This code creates an output of the intersection function.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Distance_from_Rivers</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter requires the linear unit entry that will define the distance to measure the proximity from the rivers intersected within the study area. </SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>BufferDistance = arcpy.GetParameterAsText(7)</SPAN></P><P><SPAN>This code defines the proximity to rivers within the study area. This is an input feature type.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Linear unit</td>
</tr>
<tr>
<td class="info">Buffered_Rivers</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter creates the output of the measured distance from the rivers.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>BufferDistance = arcpy.GetParameterAsText(</SPAN><SPAN>8</SPAN><SPAN>)</SPAN></P><P><SPAN>This code creates an output of the buffered rivers. It is an output feature type. </SPAN></P><P><SPAN>a</SPAN><SPAN>rcpy.Buffer_analysis("FeatureClass", "FeatureClass", "Linear Unit")</SPAN></P><P><SPAN>It will create individual buffer for each of the shapes in the file (This is by default).</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
<tr>
<td class="info">Union_of_All_Parameters</td>
<td class="info" align="left">
<span style="font-weight: bold">Dialog Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>This parameter creates the output of all the parameters given as inputs in the previous sections.</SPAN></P></DIV></DIV></DIV><div class="noContent" style="text-align:center; margin-top: -1em">___________________</div><br />
<span style="font-weight: bold">Python Reference</span><br /><DIV STYLE="text-align:Left;"><DIV><DIV><P><SPAN>UnionOutput = arcpy.GetParameterAsText(9)</SPAN></P><P><SPAN>This code makes a union of the outputs from the intersected and buffered feature classes. This is an output feature type.</SPAN></P><P><SPAN>ValueTable = ["FeatureClass", "FeatureClass", "FeatureClass"]</SPAN></P><P><SPAN>This code includes the rivers and other two parameters data that have been intersected and buffered. They are all feature class types.</SPAN></P><P><SPAN>arcpy.Union_Analysis("ValueTable", "UnionOutput")</SPAN></P><P><SPAN>This creates the output of the union.</SPAN></P></DIV></DIV></DIV></td>
<td class="info" align="left">Feature Class</td>
</tr>
</tbody>
</table>
</div>
<h2 class="gp" xmlns="">Code Samples</h2>
<div class="gpItemInfo" xmlns="">
<p><span class="noContent">There are no code samples for this tool.</span></p>
</div>
<h2 class="gp" xmlns="">Tags</h2>
<div class="gpItemInfo" xmlns="">
<p>
<span class="noContent">There are no tags for this item.</span>
</p>
</div>
<h2 class="gp" xmlns="">Credits</h2>
<div class="gpItemInfo" xmlns="">
<p><span class="noContent">There are no credits for this item.</span></p>
</div>
<h2 class="gp" xmlns="">Use limitations</h2>
<div class="gpItemInfo" xmlns="">
<p><span class="noContent">There are no use limitations for this item.</span></p>
</div>
</body>
</html>
